package br.com.ProjJava.AppPessoa.resource;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.ProjJava.AppPessoa.model.Contato;
import br.com.ProjJava.AppPessoa.service.ContatoService;

@RestController
@RequestMapping("/api/contato") //http://localhost:8080/api/contato
public class ContatoResource 
{
	@Autowired
	private ContatoService contatoService;
	
	@PostMapping //http://localhost:8080/api/contato
	public ResponseEntity<Contato> save(@RequestBody Contato contato)
	{
		Contato newContato = contatoService.save(contato);
		if(newContato == null)
			return ResponseEntity.badRequest().build(); //400
			return ResponseEntity.ok(newContato);
	}
	
	@GetMapping("/{id}") //http://localhost:8080/api/contato/1
	public ResponseEntity<Optional<Contato>> findById(@PathVariable Long id)
	{
		Optional<Contato> findContato = contatoService.findById(id);
		if(findContato == null) 
			return ResponseEntity.badRequest().build(); //400
			return ResponseEntity.ok(findContato); //200
	}
	
	@GetMapping("/{idpessoa}") //http://localhost:8080/api/contato/1
	public ResponseEntity<List<Contato>> findByPessoaId(@PathVariable Long PessoaId)
	{
		List<Contato> contatos = contatoService.findByPessoaId(PessoaId);
		if(contatos.isEmpty()) 
		{
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(contatos);
	}
	
	@PutMapping("/{id}") //http://localhost:8080/api/contato/1
	public ResponseEntity<Contato> update(@RequestBody Contato contato)
	{
		Contato updContato = contatoService.update(contato);
		if(updContato == null) 
		{
			return ResponseEntity.badRequest().build(); //400
		}
		else 
		{
			return ResponseEntity.ok(updContato); //200
		}
	}
	
	public ResponseEntity<?> delete(@PathVariable Long id)
	{
		contatoService.delete(id);
		return new ResponseEntity<>(HttpStatus.NO_CONTENT); // 204
	}
}
